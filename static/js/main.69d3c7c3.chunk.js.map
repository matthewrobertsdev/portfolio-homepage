{"version":3,"sources":["media/GreenClockDark.png","media/ContactCardsMain.png","media/ContactCardsDetail.png","media/ContactCardsQRCode.png","media/Tee-Hee.mp4","media/Tee-Hee_start_screen.png","media/bookmark_page_dark_mode.png","media/CeleritasAppsHomePage.png","view/Spacer.js","view/ProjectHeadings.js","view/LinkButton.js","view/ImageView.js","view/VideoView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Spacer","ProjectHeadings","props","className","title","description","LinkButton","href","url","name","ImageView","src","alt","class","classProp","controls","poster","posterSrc","type","App","ContactCardsMain","ContactCardsDetail","ContactCardsQRCode","DarkGreenClockSuite","VideoView","TeeHeeScreenShot","TeeHeeVideo","BookmarkPageScreenShot","CeleritasAppsHomePage","Boolean","window","location","hostname","match","document","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69d3c7c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GreenClockDark.38a7028f.png\";","module.exports = __webpack_public_path__ + \"static/media/ContactCardsMain.75d023e9.png\";","module.exports = __webpack_public_path__ + \"static/media/ContactCardsDetail.90d22235.png\";","module.exports = __webpack_public_path__ + \"static/media/ContactCardsQRCode.207e16b0.png\";","module.exports = __webpack_public_path__ + \"static/media/Tee-Hee.5b78bdf3.mp4\";","module.exports = __webpack_public_path__ + \"static/media/Tee-Hee_start_screen.c069efaf.png\";","module.exports = __webpack_public_path__ + \"static/media/bookmark_page_dark_mode.750ea69e.png\";","module.exports = __webpack_public_path__ + \"static/media/CeleritasAppsHomePage.04df0a07.png\";","import React from 'react';\nimport './App.css';\n\nfunction Spacer() {\n  return (\n    <div>\n      <br/><br/>\n      <hr/>\n      <br/>\n    </div>\n  );\n}\n\nexport default Spacer","import React from 'react';\nimport './App.css';\n\nfunction ProjectHeadings(props) {\n  return (\n    <div>\n      <h2 className=\"text-color\"> {props.title}</h2>\n      <h3 className=\"text-color\"> {props.description}</h3>\n    </div>\n  );\n\n  \n}\n\nexport default ProjectHeadings","import React from 'react';\nimport './App.css';\n\nfunction LinkButton(props) {\n  return (\n    <a className=\"link-button grid-button\" \n  href={props.url}>{props.name}</a>\n  );\n}\n\nexport default LinkButton","import React from 'react';\nimport './App.css';\n\nfunction ImageView(props) {\n  return (\n      <img src={props.src} alt={props.alt} className='image' \n        class={props.classProp}/>\n  );\n}\n\nexport default ImageView","import React from 'react';\nimport './App.css';\n\nfunction ImageView(props) {\n  return (\n    <div>\n      <video controls poster={props.posterSrc} className={props.classProp}>\n        <source src={props.src} type=\"video/mp4\"/>\n        Your browser does not support the video tag.\n      </video>\n    </div>\n  );\n}\n\nexport default ImageView","import React from 'react'\nimport './view/App.css'\nimport Spacer from './view/Spacer'\nimport ProjectHeadings from './view/ProjectHeadings'\nimport LinkButton from './view/LinkButton'\nimport ImageView from './view/ImageView'\nimport VideoView from './view/VideoView'\nimport DarkGreenClockSuite from './media/GreenClockDark.png'\nimport ContactCardsMain from './media/ContactCardsMain.png'\nimport ContactCardsDetail from './media/ContactCardsDetail.png'\nimport ContactCardsQRCode from './media/ContactCardsQRCode.png'\nimport TeeHeeVideo from './media/Tee-Hee.mp4'\nimport TeeHeeScreenShot from './media/Tee-Hee_start_screen.png'\nimport BookmarkPageScreenShot from './media/bookmark_page_dark_mode.png'\nimport CeleritasAppsHomePage from './media/CeleritasAppsHomePage.png'\n\nfunction App() {\n  return (\n    <body>\n    <main>\n      {/* title and GitHub link */}\n      <h1 className=\"title text-color\"> Matthew Roberts: Software Developer and Tutor </h1>\n      <a className=\"link-button grid-button\" href=\"https://github.com/matthewrobertsdev\">My GitHub</a>\n      <Spacer/>\n      {/* Contact Cards */}\n      <ProjectHeadings title='Contact Cards for iOS, iPadOS, macOS, and watchOS' description=\n      'A iOS, iPadOS, macOS, and watchOS app that lets you have named and color-coded contact \n      cards with different contact info about yourself so that you can share, what you \n      want with who you want.'/>\n      <ImageView src={ContactCardsMain}\n      alt=\"Contact Cards cards list\"\n      classProp='iOS-media'/>\n      <ImageView src={ContactCardsDetail}\n      alt=\"Contact Cards cards detail\"\n      classProp='iOS-media'/>\n      <ImageView src={ContactCardsQRCode}\n      alt=\"Contact Cards QR code\"\n      classProp='iOS-media'/>\n      <LinkButton url='https://matthewrobertsdev.github.io/celeritasapps/#/contactcards'\n      name='Contact Cards Homepage'/>\n      <LinkButton url='https://apps.apple.com/us/app/contact-cards/id1544693179'\n      name='Contact Cards on the App Store'/>\n      {/* Clock Suite */}\n      <ProjectHeadings title='Clock Suite for macOS' description='A macOS app that has alarms, \n      timers, a resizable clock, and a dock clock.  Highly customizable with great \n      use of color for light mode and dark mode.'/>\n      <ImageView src={DarkGreenClockSuite}\n      alt=\"Clock Suite with clock, timers, and alarms showing\"\n      classProp='large-image'/>\n      <LinkButton url='https://matthewrobertsdev.github.io/Clock-Suite/#/'\n      name='Clock Suite Homepage'/>\n      <LinkButton url='https://apps.apple.com/us/app/clock-suite/id1531519063?mt=12'\n      name='Clock Suite on the App Store'/>\n      {/* Tee Hee for A&X Analytics */}\n      <Spacer/>\n      <ProjectHeadings title='Tee-Hee for A&X Analytics' description=\n        'An iPhone app programmed with Swift that lets you view and filter local \n        events for children, search for events, and which can save, read, and \n        delete events to and from an in-app calendar'/>\n      <VideoView posterSrc={TeeHeeScreenShot} src={TeeHeeVideo} classProp='iOS-media'/>\n      {/* Bookmark Page */}\n      <Spacer/>\n      <ProjectHeadings title='Bookmark Page' description=\"A react and redux application \n        that let's you add, edit, delete, rearrange, save, and load bookmarks, with dark \n        mode and light mode\"/>\n      <ImageView src={BookmarkPageScreenShot}\n      alt=\"Bookmark page with links in dark mode\"\n      classProp='large-image'/>\n      <br/>\n      <LinkButton url='https://matthewrobertsdev.github.io/BookmarkPage/index'\n      name='Bookmark Page'/>\n      <LinkButton url='https://github.com/matthewrobertsdev/bookmark-page'\n      name='Bookmark Page GitHub Repo'/>\n      <Spacer/>\n      <ProjectHeadings title='Celeritas Apps Homepage' \n      description=\"A responsive React homepage for my apps with dark mode and light mode.\"/>\n      <ImageView src={CeleritasAppsHomePage}\n      alt=\"Celeritas Apps homepage\"\n      classProp='large-image'/>\n      <br/>\n      <LinkButton url='https://matthewrobertsdev.github.io/celeritasapps/#/'\n      name='Celeritas Apps Homepage'/>\n      <LinkButton url='https://github.com/matthewrobertsdev/portfolio-homepage'\n      name='Celeritas Apps Homepage GitHub Repo'/>\n    </main>\n    <footer>\n      <h3 className='text-color'>Copyright Â© 2020-2021 Matt Roberts</h3>\n      <br/><br/>\n    </footer>\n    </body>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './view/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\ndocument.title='Matt Roberts | Developer';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}