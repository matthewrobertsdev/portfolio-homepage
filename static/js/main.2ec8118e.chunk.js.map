{"version":3,"sources":["LinkModel.js","MediaModel.js","App.js","index.js","ProjectInfos.js","ProjectView.js","serviceWorker.js","App.test.js","../src sync /^/.//.*$","bookmark_page_dark_mode.png","db_connection_manager_source.png","dev_links_light_mode.png","give_contact_qr_code.png","keyboard_view.png","portfolio_source_code.png"],"names":["LinkModel","name","URL","this","MediaModel","src","type","alt","widthPercent","App","className","href","projectInfos","map","info","projectInfo","document","title","ReactDOM","render","getElementById","serviceWorker","ProjectInfo","description","mediaModel","links","keyboard","bookmarkPage","contactQR","dbConnectionManager","softwareDeveloperLinks","portfolioPage","ProjectView","props","images","require","style","createMedia","link","createLinkButtons","isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","process","origin","addEventListener","swUrl","fetch","then","response","contentType","headers","get","status","indexOf","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","it","div","createElement","unmountComponentAtNode","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.2ec8118e.chunk.js","sourcesContent":["class LinkModel{\n    name\n    URL\n    constructor(name, URL){\n        this.name=name;\n        this.URL=URL;\n    }\n}\nexport default LinkModel;","class MediaModel {\n    src = ''; type = ''; alt = ''; widthPercent='90%'\n    constructor(src, type, alt, widthPercent) {\n        this.src = src; this.type = type; this.alt = alt; this.widthPercent=widthPercent;\n    }\n}\nexport default MediaModel;","import React from 'react';\nimport './App.css';\nimport {projectInfos} from './ProjectInfos';\nimport ProjectView from './ProjectView';\n\nfunction App() {\n  return (\n    <div>\n      <h1 className=\"title text-color\"> Matthew Roberts </h1>\n      <h1 className=\"title text-color\"> Software Developer and Tutor </h1>\n    <a className=\"link-button grid-button\" href=\"https://github.com/matthewrobertsdev\">My Github</a>\n    <h1 className=\"title text-color\"> My Portfolio </h1>\n    <br></br>\n    {createProjectViews()}\n    </div>\n  );\n\n  function createProjectViews(){\n    return projectInfos.map((info)=>{return <div><ProjectView projectInfo={info}/><br></br></div>})\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//document.body.style.backgroundColor = \"rgb(0, 166, 255)\";\ndocument.title='Matt Roberts | Developer';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import LinkModel from './LinkModel';\nimport MediaModel from './MediaModel';\n\nclass ProjectInfo{\n    title='';\n    description='';\n    mediaModel=null;\n    links=[];\n\n    constructor(title, description, mediaModel,links){\n        this.title=title;\n        this.description=description;\n        this.mediaModel=mediaModel;\n        this.links=links;\n    }\n}\n\nexport default ProjectInfo;\n\nexport const keyboard=new ProjectInfo('keyboard', 'A Java Application that Let\\'s '+\n'Your Computer Keyboard be a Piano Keyboard', \nnew MediaModel('./keyboard_view.png', 'image', \n'Keyboard\\'s view, which is unnecessary for playing.', '90%'),\n[new LinkModel('Website for keyboard', 'https://matthewrobertsdev.github.io/keyboard/'),\nnew LinkModel('keyboard Github Repo', 'https://github.com/matthewrobertsdev/keyboard')])\n\nexport const bookmarkPage=new ProjectInfo('Bookmark Page', 'A react and redux application '+\n'that let\\'s you add, edit, delete, rearrange, save, and load bookmarks, with dark mode and '+\n'light mode',\nnew MediaModel('./bookmark_page_dark_mode.png', 'image', \n'Bookmark page with links in dark mode', '90%'),\n [new LinkModel('Bookmark Page', 'https://matthewrobertsdev.github.io/BookmarkPage/index'),\nnew LinkModel('Bookmark Page Github Repo', 'https://github.com/matthewrobertsdev/bookmark-page')])\n\nexport const contactQR=new ProjectInfo('ContactQR', 'A project for an iOS app that lets you '+\n'share your contact info using QR codes', new MediaModel('./give_contact_qr_code.png', 'image',\n'UI for giving a contact QR code', '60%'),\n[new LinkModel('ContactQR Github repo', \n'https://github.com/matthewrobertsdev/ContactQR')])\n\nexport const dbConnectionManager=new ProjectInfo('DBConnectionManager for SQL in Java', \n'A Class for Managing Connections from Java Code to a SQL Database', new MediaModel('./db_connection_manager_source.png', 'image', \n'Some of the source code of DBConnectionManager', '90%'),\n[new LinkModel('DBConnectionManager Github Repo', \n'https://github.com/matthewrobertsdev/DBConnectionManager-SQL-Java')])\n\nexport const softwareDeveloperLinks=new ProjectInfo('Software Developer Link Page', \n'A Page of Some Links for People Learning Software Development Built with React', \nnew MediaModel('./dev_links_light_mode.png', 'image', \n'Developer links page in light mode', '90%'),\n[new LinkModel('Developer Links Page', \n'https://matthewrobertsdev.github.io/SoftwareDevelopmentLinks/index'),\nnew LinkModel('Developer Links Github Repo', \n'https://github.com/matthewrobertsdev/software-development-links')])\n\nexport const portfolioPage=new ProjectInfo('Portfolio Page Source', \n'The Source Files for My Portfolio Page', new MediaModel('./portfolio_source_code.png', 'image',\n'Some of the source code for my portfolio page', '90%'),\n[new LinkModel('Portfolio Page Source', \n'https://github.com/matthewrobertsdev/portfolio/tree/source')])\n\nexport const projectInfos=[bookmarkPage, keyboard, contactQR, dbConnectionManager, softwareDeveloperLinks, portfolioPage];","import React from 'react';\nimport './App.css';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nfunction ProjectView(props) {\n    return (\n      <div>\n        <h2 className=\"text-color\"> {props.projectInfo.title}</h2>\n        <h3 className=\"text-color\"> {props.projectInfo.description}</h3>\n        <br></br>\n        {createMedia(props)}\n        <br></br>\n        {createLinkButtons(props)}\n      </div>\n    );\n\n    \n  }\n\n  function createMedia(props){\n    const images = require.context('./', true);\n    const mediaModel=props.projectInfo.mediaModel\n      let src = images(mediaModel.src);\n      if (mediaModel.type==='image'){\n        return <img src={src} alt={mediaModel.alt} className='image' \n        style={{'width': mediaModel.widthPercent, 'maxWidth': '650px'}}/>\n      }\n  }\n\n  function createLinkButtons(props){\n    return props.projectInfo.links.map((link)=>{return <a className=\"link-button grid-button\" \n  href={link.URL}>{link.name}</a>})\n  }\nexport default ProjectView","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nit('renders without crashing', () => {\n  const div = document.createElement('div');\n  ReactDOM.render(<App />, div);\n  ReactDOM.unmountComponentAtNode(div);\n});\n","var map = {\n\t\"./\": 6,\n\t\"./App\": 3,\n\t\"./App.css\": 10,\n\t\"./App.js\": 3,\n\t\"./App.test\": 13,\n\t\"./App.test.js\": 13,\n\t\"./LinkModel\": 1,\n\t\"./LinkModel.js\": 1,\n\t\"./MediaModel\": 2,\n\t\"./MediaModel.js\": 2,\n\t\"./ProjectInfos\": 7,\n\t\"./ProjectInfos.js\": 7,\n\t\"./ProjectView\": 8,\n\t\"./ProjectView.js\": 8,\n\t\"./bookmark_page_dark_mode.png\": 21,\n\t\"./db_connection_manager_source.png\": 22,\n\t\"./dev_links_light_mode.png\": 23,\n\t\"./give_contact_qr_code.png\": 24,\n\t\"./index\": 6,\n\t\"./index.css\": 12,\n\t\"./index.js\": 6,\n\t\"./keyboard_view.png\": 25,\n\t\"./portfolio_source_code.png\": 26,\n\t\"./serviceWorker\": 9,\n\t\"./serviceWorker.js\": 9\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","module.exports = __webpack_public_path__ + \"static/media/bookmark_page_dark_mode.8599edaa.png\";","module.exports = __webpack_public_path__ + \"static/media/db_connection_manager_source.fc23984b.png\";","module.exports = __webpack_public_path__ + \"static/media/dev_links_light_mode.99bb55d5.png\";","module.exports = __webpack_public_path__ + \"static/media/give_contact_qr_code.2c5a9074.png\";","module.exports = __webpack_public_path__ + \"static/media/keyboard_view.6ae08478.png\";","module.exports = __webpack_public_path__ + \"static/media/portfolio_source_code.9e5119ec.png\";"],"sourceRoot":""}