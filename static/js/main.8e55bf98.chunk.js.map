{"version":3,"sources":["media sync /^/.//.*$","media/Tee-Hee.mp4","media/Tee-Hee_start_screen.png","media/bookmark_page_dark_mode.png","media/db_connection_manager_source.png","media/dev_links_light_mode.png","media/give_contact_qr_code.png","media/keyboard_view.png","media/portfolio_source_code.png","model/LinkModel.js","model/MediaModel.js","model/ProjectInfos.js","model/VideoModel.js","view/ProjectView.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","LinkModel","name","URL","this","MediaModel","src","type","alt","widthPercent","maxWidth","ProjectInfo","title","description","mediaModel","links","teeHee","posterURL","keyboard","projectInfos","ProjectView","props","className","projectInfo","link","href","createLinkButtons","media","require","style","posterSrc","posterContext","controls","poster","createMedia","App","info","Boolean","window","location","hostname","match","document","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e55bf98.chunk.js","sourcesContent":["var map = {\n\t\"./Tee-Hee.mp4\": 16,\n\t\"./Tee-Hee_start_screen.png\": 17,\n\t\"./bookmark_page_dark_mode.png\": 18,\n\t\"./db_connection_manager_source.png\": 19,\n\t\"./dev_links_light_mode.png\": 20,\n\t\"./give_contact_qr_code.png\": 21,\n\t\"./keyboard_view.png\": 22,\n\t\"./portfolio_source_code.png\": 23\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4;","module.exports = __webpack_public_path__ + \"static/media/Tee-Hee.5b78bdf3.mp4\";","module.exports = __webpack_public_path__ + \"static/media/Tee-Hee_start_screen.c069efaf.png\";","module.exports = __webpack_public_path__ + \"static/media/bookmark_page_dark_mode.8599edaa.png\";","module.exports = __webpack_public_path__ + \"static/media/db_connection_manager_source.fc23984b.png\";","module.exports = __webpack_public_path__ + \"static/media/dev_links_light_mode.99bb55d5.png\";","module.exports = __webpack_public_path__ + \"static/media/give_contact_qr_code.2c5a9074.png\";","module.exports = __webpack_public_path__ + \"static/media/keyboard_view.6ae08478.png\";","module.exports = __webpack_public_path__ + \"static/media/portfolio_source_code.8257191c.png\";","class LinkModel{\n    name\n    URL\n    constructor(name, URL){\n        this.name=name;\n        this.URL=URL;\n    }\n}\nexport default LinkModel;","class MediaModel {\n    src = ''; type = ''; alt = ''; widthPercent='90%'; maxWidth='650px';\n    constructor(src, type, alt, widthPercent, maxWidth) {\n        this.src = src; this.type = type; this.alt = alt; this.widthPercent=widthPercent;\n        this.maxWidth=maxWidth;\n    }\n}\nexport default MediaModel;","import LinkModel from './LinkModel';\nimport MediaModel from './MediaModel';\nimport VideoModel from './VideoModel';\n\nclass ProjectInfo{\n    title='';\n    description='';\n    mediaModel=null;\n    links=[];\n\n    constructor(title, description, mediaModel,links){\n        this.title=title;\n        this.description=description;\n        this.mediaModel=mediaModel;\n        this.links=links;\n    }\n}\n\nexport default ProjectInfo;\n\nexport const teeHee=new ProjectInfo('Tee-Hee for A&X Analytics', \n'An iPhone app programmed with Swift that lets you view and filter events, '+\n'search events, and which can save, read, and delete events to and from '+\n'an in-app calendar', new VideoModel('./Tee-Hee.mp4', 'video',\n'Video demo of Tee-Hee app', '40%', '200px', './Tee-Hee_start_screen.png'),\n[])\n\nexport const keyboard=new ProjectInfo('keyboard', 'A Java Application that Let\\'s '+\n'Your Computer Keyboard be a Piano Keyboard', \nnew MediaModel('./keyboard_view.png', 'image', \n'Keyboard\\'s view, which is unnecessary for playing.', '90%', '650px'),\n[new LinkModel('Website for keyboard', 'https://matthewrobertsdev.github.io/keyboard/'),\nnew LinkModel('keyboard Github Repo', 'https://github.com/matthewrobertsdev/keyboard')])\n\nexport const bookmarkPage=new ProjectInfo('Bookmark Page', 'A react and redux application '+\n'that let\\'s you add, edit, delete, rearrange, save, and load bookmarks, with dark mode and '+\n'light mode',\nnew MediaModel('./bookmark_page_dark_mode.png', 'image', \n'Bookmark page with links in dark mode', '90%', '650px'),\n [new LinkModel('Bookmark Page', 'https://matthewrobertsdev.github.io/BookmarkPage/index'),\nnew LinkModel('Bookmark Page Github Repo', 'https://github.com/matthewrobertsdev/bookmark-page')])\n\nexport const contactQR=new ProjectInfo('ContactQR', 'A project for an iOS app that lets you '+\n'share your contact info using QR codes', new MediaModel('./give_contact_qr_code.png', 'image',\n'UI for giving a contact QR code', '60%', '350px'),\n[new LinkModel('ContactQR Github repo', \n'https://github.com/matthewrobertsdev/ContactQR')])\n\nexport const dbConnectionManager=new ProjectInfo('DBConnectionManager for SQL in Java', \n'A Class for Managing Connections from Java Code to a SQL Database', new MediaModel('./db_connection_manager_source.png', 'image', \n'Some of the source code of DBConnectionManager', '90%', '650px'),\n[new LinkModel('DBConnectionManager Github Repo', \n'https://github.com/matthewrobertsdev/DBConnectionManager-SQL-Java')])\n\nexport const softwareDeveloperLinks=new ProjectInfo('Software Developer Link Page', \n'A Page of Some Links for People Learning Software Development Built with React', \nnew MediaModel('./dev_links_light_mode.png', 'image', \n'Developer links page in light mode', '90%', '650px'),\n[new LinkModel('Developer Links Page', \n'https://matthewrobertsdev.github.io/SoftwareDevelopmentLinks/index'),\nnew LinkModel('Developer Links Github Repo', \n'https://github.com/matthewrobertsdev/software-development-links')])\n\nexport const portfolioPage=new ProjectInfo('Portfolio Page Source', \n'The Source Files for My Portfolio Page', new MediaModel('./portfolio_source_code.png', 'image',\n'Some of the source code for my portfolio page', '90%', '650px'),\n[new LinkModel('Portfolio Page Source', \n'https://github.com/matthewrobertsdev/portfolio/tree/source')])\n\nexport const projectInfos=[teeHee, bookmarkPage, keyboard, contactQR, dbConnectionManager, softwareDeveloperLinks, portfolioPage];","import MediaModel from './MediaModel';\n\nclass VideoModel extends MediaModel{\n\n    posterURL=''\n    constructor(src, type, alt, widthPercent, maxWidth, posterURL) {\n        super(src, type, alt, widthPercent, maxWidth)\n        this.posterURL=posterURL;\n    }\n}\n\nexport default VideoModel;","import React from 'react';\nimport './App.css';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nfunction ProjectView(props) {\n    return (\n      <div>\n        <hr></hr>\n        <h2 className=\"text-color\"> {props.projectInfo.title}</h2>\n        <h3 className=\"text-color\"> {props.projectInfo.description}</h3>\n        <br></br>\n        {createLinkButtons(props)}\n        {createMedia(props)}\n        <br></br>\n      </div>\n    );\n\n    \n  }\n\n  function createMedia(props){\n    const media = require.context('.././media/', true);\n    const mediaModel=props.projectInfo.mediaModel\n      let src = media(mediaModel.src);\n      if (mediaModel.type==='image'){\n        return <div><br></br><br></br><br></br><img src={src} alt={mediaModel.alt} className='image' \n        style={{'width': mediaModel.widthPercent, 'maxWidth': mediaModel.maxWidth}}/></div>\n      } else if (mediaModel.type==='video'){\n        const posterContext = require.context('.././media/', true);\n        let posterSrc = posterContext(mediaModel.posterURL);\n        return <div><video controls poster={posterSrc} style={{'width': mediaModel.widthPercent, 'maxWidth': mediaModel.maxWidth}}>\n        <source src={src} type=\"video/mp4\"/>\n        Your browser does not support the video tag.\n      </video></div>\n      }\n  }\n\n  function createLinkButtons(props){\n    return props.projectInfo.links.map((link)=>{return <a className=\"link-button grid-button\" \n  href={link.URL}>{link.name}</a>})\n  }\nexport default ProjectView","import React from 'react';\nimport './view/App.css';\nimport {projectInfos} from './model/ProjectInfos';\nimport ProjectView from './view/ProjectView';\n\nfunction App() {\n  return (\n    <div>\n      <h1 className=\"title text-color\"> Matthew Roberts: Software Developer and Tutor </h1>\n      <a className=\"link-button grid-button\" href=\"https://github.com/matthewrobertsdev\">My Github</a>\n    <br></br>\n    {createProjectViews()}\n    </div>\n  );\n\n  function createProjectViews(){\n    return projectInfos.map((info)=>{return <div><ProjectView projectInfo={info}/><br></br></div>})\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './view/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\ndocument.title='Matt Roberts | Developer';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}